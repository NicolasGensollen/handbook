name: build-and-deploy

on:
  push:
    branches:
      - main

env:
  NILEARN_DATA: /home/runner/.nilearn_data/

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true
      - uses: actions/cache@v3
        id: cache-nilearn-data
        with:
          path: /home/runner/.nilearn_data
          key: nilearn-data
      - uses: actions/cache@v3
        id: cache-venv
        with:
          path: .venv
          key: venv-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/pyproject.toml') }}
      - name: Install
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: make install
      - name: Build
        run: make docs
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html
